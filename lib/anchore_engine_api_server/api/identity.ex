# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule AnchoreEngineAPIServer.Api.Identity do
  @moduledoc """
  API calls for all endpoints tagged `Identity`.
  """

  alias AnchoreEngineAPIServer.Connection
  import AnchoreEngineAPIServer.RequestBuilder


  @doc """
  add/replace credential

  ## Parameters

  - connection (AnchoreEngineAPIServer.Connection): Connection to server
  - credential (AccessCredential):
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %AnchoreEngineAPIServer.Model.User{}} on success
  {:error, info} on failure
  """
  @spec add_credential(Tesla.Env.client, AnchoreEngineAPIServer.Model.AccessCredential.t, keyword()) :: {:ok, AnchoreEngineAPIServer.Model.User.t} | {:error, Tesla.Env.t}
  def add_credential(connection, credential, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/user/credentials")
    |> add_param(:body, :credential, credential)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%AnchoreEngineAPIServer.Model.User{})
  end

  @doc """
  Get current credential summary

  ## Parameters

  - connection (AnchoreEngineAPIServer.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %AnchoreEngineAPIServer.Model.CredentialList{}} on success
  {:error, info} on failure
  """
  @spec get_credentials(Tesla.Env.client, keyword()) :: {:ok, AnchoreEngineAPIServer.Model.CredentialList.t} | {:error, Tesla.Env.t}
  def get_credentials(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/user/credentials")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%AnchoreEngineAPIServer.Model.CredentialList{})
  end

  @doc """
  List authenticated user info

  ## Parameters

  - connection (AnchoreEngineAPIServer.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %AnchoreEngineAPIServer.Model.User{}} on success
  {:error, info} on failure
  """
  @spec get_user(Tesla.Env.client, keyword()) :: {:ok, AnchoreEngineAPIServer.Model.User.t} | {:error, Tesla.Env.t}
  def get_user(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/user")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%AnchoreEngineAPIServer.Model.User{})
  end

  @doc """
  List the account for the authenticated user

  ## Parameters

  - connection (AnchoreEngineAPIServer.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %AnchoreEngineAPIServer.Model.Account{}} on success
  {:error, info} on failure
  """
  @spec get_users_account(Tesla.Env.client, keyword()) :: {:ok, AnchoreEngineAPIServer.Model.Account.t} | {:error, Tesla.Env.t}
  def get_users_account(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/account")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%AnchoreEngineAPIServer.Model.Account{})
  end
end
