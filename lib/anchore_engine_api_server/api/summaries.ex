# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule AnchoreEngineAPIServer.Api.Summaries do
  @moduledoc """
  API calls for all endpoints tagged `Summaries`.
  """

  alias AnchoreEngineAPIServer.Connection
  import AnchoreEngineAPIServer.RequestBuilder


  @doc """
  List all visible image digests and tags
  List all image tags visible to the user

  ## Parameters

  - connection (AnchoreEngineAPIServer.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :image_status ([String.t]): Filter images in one or more states such as active, deleting. Defaults to active images only if unspecified
    - :x_anchore_account (String.t): An account name to change the resource scope of the request to that account, if permissions allow (admin only)

  ## Returns

  {:ok, %AnchoreEngineAPIServer.Model.AnchoreImageTagSummaryList{}} on success
  {:error, info} on failure
  """
  @spec list_imagetags(Tesla.Env.client, keyword()) :: {:ok, AnchoreEngineAPIServer.Model.AnchoreImageTagSummaryList.t} | {:error, Tesla.Env.t}
  def list_imagetags(connection, opts \\ []) do
    optional_params = %{
      :image_status => :query,
      :"x-anchore-account" => :headers
    }
    %{}
    |> method(:get)
    |> url("/summaries/imagetags")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%AnchoreEngineAPIServer.Model.AnchoreImageTagSummaryList{})
  end
end
